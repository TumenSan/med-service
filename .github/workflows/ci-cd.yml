name: CI Build & Dockerize

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options:
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # ----------------------
      # BACKEND: GRADLE BUILD
      # ----------------------
      - name: Build and Test Backend (Gradle)
        working-directory: med-service-back
        run: |
          chmod +x gradlew
          ./gradlew clean build test

      # ----------------------
      # FRONTEND: NPM BUILD
      # ----------------------
      - name: Install Frontend Dependencies
        working-directory: frontend
        run: npm install

      - name: Build Frontend
        working-directory: frontend
        run: npm run build

      - name: Run Frontend Tests
        working-directory: frontend
        run: npm test

      # ----------------------
      # DOCKER: Build Image
      # ----------------------
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./med-service-back/Dockerfile
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: your-dockerhub-username/med-service-back:latest